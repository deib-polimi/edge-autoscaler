//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	resource "k8s.io/apimachinery/pkg/api/resource"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommunityConfiguration) DeepCopyInto(out *CommunityConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunityConfiguration.
func (in *CommunityConfiguration) DeepCopy() *CommunityConfiguration {
	if in == nil {
		return nil
	}
	out := new(CommunityConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CommunityConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommunityConfigurationList) DeepCopyInto(out *CommunityConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CommunityConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunityConfigurationList.
func (in *CommunityConfigurationList) DeepCopy() *CommunityConfigurationList {
	if in == nil {
		return nil
	}
	out := new(CommunityConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CommunityConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommunityConfigurationSpec) DeepCopyInto(out *CommunityConfigurationSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunityConfigurationSpec.
func (in *CommunityConfigurationSpec) DeepCopy() *CommunityConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(CommunityConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommunityConfigurationStatus) DeepCopyInto(out *CommunityConfigurationStatus) {
	*out = *in
	if in.Communities != nil {
		in, out := &in.Communities, &out.Communities
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunityConfigurationStatus.
func (in *CommunityConfigurationStatus) DeepCopy() *CommunityConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(CommunityConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in CommunityDestinationRoutingRule) DeepCopyInto(out *CommunityDestinationRoutingRule) {
	{
		in := &in
		*out = make(CommunityDestinationRoutingRule, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunityDestinationRoutingRule.
func (in CommunityDestinationRoutingRule) DeepCopy() CommunityDestinationRoutingRule {
	if in == nil {
		return nil
	}
	out := new(CommunityDestinationRoutingRule)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in CommunityFunctionAllocation) DeepCopyInto(out *CommunityFunctionAllocation) {
	{
		in := &in
		*out = make(CommunityFunctionAllocation, len(*in))
		for key, val := range *in {
			var outVal map[string]bool
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(CommunityNodeAllocation, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
			(*out)[key] = outVal
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunityFunctionAllocation.
func (in CommunityFunctionAllocation) DeepCopy() CommunityFunctionAllocation {
	if in == nil {
		return nil
	}
	out := new(CommunityFunctionAllocation)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in CommunityFunctionRoutingRule) DeepCopyInto(out *CommunityFunctionRoutingRule) {
	{
		in := &in
		*out = make(CommunityFunctionRoutingRule, len(*in))
		for key, val := range *in {
			var outVal map[string]resource.Quantity
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(CommunityDestinationRoutingRule, len(*in))
				for key, val := range *in {
					(*out)[key] = val.DeepCopy()
				}
			}
			(*out)[key] = outVal
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunityFunctionRoutingRule.
func (in CommunityFunctionRoutingRule) DeepCopy() CommunityFunctionRoutingRule {
	if in == nil {
		return nil
	}
	out := new(CommunityFunctionRoutingRule)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in CommunityNodeAllocation) DeepCopyInto(out *CommunityNodeAllocation) {
	{
		in := &in
		*out = make(CommunityNodeAllocation, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunityNodeAllocation.
func (in CommunityNodeAllocation) DeepCopy() CommunityNodeAllocation {
	if in == nil {
		return nil
	}
	out := new(CommunityNodeAllocation)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommunitySchedule) DeepCopyInto(out *CommunitySchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunitySchedule.
func (in *CommunitySchedule) DeepCopy() *CommunitySchedule {
	if in == nil {
		return nil
	}
	out := new(CommunitySchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CommunitySchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommunityScheduleList) DeepCopyInto(out *CommunityScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CommunitySchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunityScheduleList.
func (in *CommunityScheduleList) DeepCopy() *CommunityScheduleList {
	if in == nil {
		return nil
	}
	out := new(CommunityScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CommunityScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommunityScheduleSpec) DeepCopyInto(out *CommunityScheduleSpec) {
	*out = *in
	if in.CpuRoutingRules != nil {
		in, out := &in.CpuRoutingRules, &out.CpuRoutingRules
		*out = make(CommunitySourceRoutingRule, len(*in))
		for key, val := range *in {
			var outVal map[string]CommunityDestinationRoutingRule
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(CommunityFunctionRoutingRule, len(*in))
				for key, val := range *in {
					var outVal map[string]resource.Quantity
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = make(CommunityDestinationRoutingRule, len(*in))
						for key, val := range *in {
							(*out)[key] = val.DeepCopy()
						}
					}
					(*out)[key] = outVal
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.CpuAllocations != nil {
		in, out := &in.CpuAllocations, &out.CpuAllocations
		*out = make(CommunityFunctionAllocation, len(*in))
		for key, val := range *in {
			var outVal map[string]bool
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(CommunityNodeAllocation, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.GpuRoutingRules != nil {
		in, out := &in.GpuRoutingRules, &out.GpuRoutingRules
		*out = make(CommunitySourceRoutingRule, len(*in))
		for key, val := range *in {
			var outVal map[string]CommunityDestinationRoutingRule
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(CommunityFunctionRoutingRule, len(*in))
				for key, val := range *in {
					var outVal map[string]resource.Quantity
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = make(CommunityDestinationRoutingRule, len(*in))
						for key, val := range *in {
							(*out)[key] = val.DeepCopy()
						}
					}
					(*out)[key] = outVal
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.GpuAllocations != nil {
		in, out := &in.GpuAllocations, &out.GpuAllocations
		*out = make(CommunityFunctionAllocation, len(*in))
		for key, val := range *in {
			var outVal map[string]bool
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(CommunityNodeAllocation, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunityScheduleSpec.
func (in *CommunityScheduleSpec) DeepCopy() *CommunityScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(CommunityScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in CommunitySourceRoutingRule) DeepCopyInto(out *CommunitySourceRoutingRule) {
	{
		in := &in
		*out = make(CommunitySourceRoutingRule, len(*in))
		for key, val := range *in {
			var outVal map[string]CommunityDestinationRoutingRule
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(CommunityFunctionRoutingRule, len(*in))
				for key, val := range *in {
					var outVal map[string]resource.Quantity
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = make(CommunityDestinationRoutingRule, len(*in))
						for key, val := range *in {
							(*out)[key] = val.DeepCopy()
						}
					}
					(*out)[key] = outVal
				}
			}
			(*out)[key] = outVal
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunitySourceRoutingRule.
func (in CommunitySourceRoutingRule) DeepCopy() CommunitySourceRoutingRule {
	if in == nil {
		return nil
	}
	out := new(CommunitySourceRoutingRule)
	in.DeepCopyInto(out)
	return *out
}
